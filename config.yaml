# basic folders
git_root        : '#ROOT#/'
git_target      : '#ROOT#/database/'        # exported database objects
patch_root      : '#ROOT#/patches/'         # extra objects included when -patch(ing)
patch_done      : '#ROOT#/patches_done/'    # output files from patching

# log files and output files
patch_today     : '#ROOT#/patches_done/patch_#TODAY#.sql'
patch_zip       : '#ROOT#/patches_done/patch_#TODAY#.zip'
patch_log       : '#ROOT#/patches_done/patch.log'
patch_manually  : '#ROOT#/patches/30_table+data_changes/#TODAY#.sql'
rollout_log     : '#ROOT#/patches_done/rollout.log'
locked_log      : '#ROOT#/patches_done/locked.log'

# APEX related
apex_dir        : '#ROOT#/database/apex/'
apex_temp_dir   : '#ROOT#/database/apex/temp/'
apex_tmp        : apex.#.tmp
apex_ws_files   : '#ROOT#/database/apex/workspace_files/'

# APEX exports
apex_embedded   : True            # export embedded code
apex_splited    : True            # export splited application
apex_full       : True            # traditional full export
apex_files      : True            # export workspace files
apex_changes    : True            # show app changes made in -recent days

# target folders by object types
folders:
  APEX                : ['#ROOT#/database/apex/',         .sql]
  DATA                : ['#ROOT#/database/data/',         .csv]
  FUNCTION            : ['#ROOT#/database/functions/',    .sql]
  GRANT               : ['#ROOT#/database/grants/',       .sql]
  INDEX               : ['#ROOT#/database/indexes/',      .sql]
  JOB                 : ['#ROOT#/database/jobs/',         .sql]
  MATERIALIZED VIEW   : ['#ROOT#/database/mviews/',       .sql]
  PACKAGE             : ['#ROOT#/database/packages/',     .spec.sql, .pks]   # alternative ext.
  PACKAGE BODY        : ['#ROOT#/database/packages/',     .sql,      .pkb]
  PROCEDURE           : ['#ROOT#/database/procedures/',   .sql]
  SEQUENCE            : ['#ROOT#/database/sequences/',    .sql]
  SYNONYM             : ['#ROOT#/database/synonyms/',     .sql]
  TABLE               : ['#ROOT#/database/tables/',       .sql]
  TRIGGER             : ['#ROOT#/database/triggers/',     .sql]
  VIEW                : ['#ROOT#/database/views/',        .sql]

grants_recd : '/received/#.sql'   # received grants, under GRANT folder

# export objects by type in this order
objects_sorted:
  - SYNONYM
  - SEQUENCE
  - TABLE
  - INDEX
  - MATERIALIZED VIEW
  - VIEW
  - FUNCTION
  - PROCEDURE
  - PACKAGE
  - PACKAGE BODY
  - TRIGGER
  - JOB

# option to remove objects before create
drop_objects:
  - MATERIALIZED VIEW

# patch folders, sorted
patch_folders:
  init      : '#ROOT#/patches/10_init/'
  tables    : '#ROOT#/patches/20_new_tables/'
  changes   : '#ROOT#/patches/30_table+data_changes/'
  objects   : '#ROOT#/patches/40_repeatable_objects/'
  cleanup   : '#ROOT#/patches/50_cleanup/'
  data      : '#ROOT#/patches/60_data/'
  grants    : '#ROOT#/patches/70_grants/'
  jobs      : '#ROOT#/patches/80_jobs/'
  finally   : '#ROOT#/patches/90_finally/'

# @@ = relative to script from which it is called from
patch_line  : '@@"../{}"'

# map objects to patch folders
patch_map:
  init: []
  tables:
    - SEQUENCE
    - TABLE
  objects:
    - INDEX
    - MATERIALIZED VIEW
    - VIEW
    - TRIGGER
    - PROCEDURE
    - FUNCTION
    - PACKAGE
    - PACKAGE BODY
    - SYNONYM
  data:
    - DATA
  grants:
    - GRANT
  jobs:
    - JOB

# for CSV files dont export audit columns
ignore_columns:
  - updated_at
  - updated_by
  - created_at
  - created_by

#
merge_update: .U.
merge_delete: .D.

# filter table data before export to CSV file
csv_export_filters:
  NAVIGATION : 'app_id > 0'

